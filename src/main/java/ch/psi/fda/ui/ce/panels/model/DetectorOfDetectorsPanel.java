/*
 *  Copyright (C) 2011 Paul Scherrer Institute
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * DetectorOfDetectorsPanel.java
 *
 * Created on Jan 25, 2011, 3:48:45 PM
 */

package ch.psi.fda.ui.ce.panels.model;

import ch.psi.fda.ui.ce.panels.CollapsibleListContainer;
import ch.psi.fda.ui.ce.panels.ObjectProvider;
import ch.psi.fda.model.v1.DetectorOfDetectors;
import ch.psi.fda.model.v1.ScalarDetector;

/**
 *
 * @author ebner
 */
public class DetectorOfDetectorsPanel extends javax.swing.JPanel implements ObjectProvider<DetectorOfDetectors> {

    private DetectorOfDetectors detector;

    public DetectorOfDetectorsPanel() {
        this(new DetectorOfDetectors());
    }

    /** Creates new form DetectorOfDetectorsPanel */
    public DetectorOfDetectorsPanel(DetectorOfDetectors detector) {
        if(detector.getId() == null || detector.getId().equals("")){
            detector.setId(IdGenerator.generateId());
        }
        this.detector = detector;
        this.detector.setName("");

        initComponents();

        collapsibleListContainer1.setHeader("Detectors");
        collapsibleListContainer1.setName("Detectors");

        // Update view
        // -

        collapsibleListContainer1.setCollapsed(DefaultSettings.getInstance().isCollapsed());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        collapsibleListContainer1 = new CollapsibleListContainer<ScalarDetector>(new DiscreteStepScalarDetectorListItemProvider(detector.getDetector()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(collapsibleListContainer1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(collapsibleListContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ch.psi.fda.ui.ce.panels.CollapsibleListContainer collapsibleListContainer1;
    // End of variables declaration//GEN-END:variables

    @Override
    public DetectorOfDetectors getObject() {
        return detector;
    }

}
